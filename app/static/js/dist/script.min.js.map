{"version":3,"sources":["script.js"],"names":["document","addEventListener","textElement","getElementById","type","charIndex","setTimeout","erasingSpeed","length","textContent","texts","textIndex","charAt","typingSpeed","erase","delayBetweenTexts","substring","console","error","style","display","classList","remove","closeBtn","sidebar","prepend","querySelector","createElement","menuBtn","add","toggleSwitch","localStorage","setItem","body","this","checked","event","shakeMenu","menu","tapCount","adminLoginUrl","adminButton","window","location","getAttribute","preventDefault","href"],"mappings":"aACAA,SAASC,iBAAiB,mBAAoB,WAD9C,IAAAC,EAAAF,SAAAG,eAAA,eACAH,GAAQE,EAACD,CAAAA,IAiCgBG,EAATC,SAASD,IACTE,EAAkBC,EAAAA,GAAlBC,QACGN,EAAAO,aAAAC,EAAAC,GAAAC,OAAAP,GACHM,IACAL,WAAiBO,EAAAA,IAnCZP,WAAAQ,EAAAC,IAaAD,EAATT,SAASS,IACW,EAAlBD,GAgBEX,EAAYO,YAAcC,EAAMC,GAAWK,UAAU,EAAGX,EAAY,GAftEE,IAiBED,WAAWQ,EAAOP,KAOfH,GAAMS,EAAjB,GAAAH,EAAAF,OACGF,WAAAF,EAAAS,KAzCDX,EAAcF,CAGZ,8BAFJE,+CAgBgC,mDAhBnB,uDAmBLG,0DACAH,oEACAG,uDAIHM,EAAA,EAzBQN,EAAA,EAcPQ,EAAc,GAdPN,EA4BJO,EACDT,EAAe,IAiB/BC,WAAAF,EAAAS,QALQI,QAAQC,MAAM,6CAOtBZ,WAAW,WAMXN,SAASC,eAAiB,UAAAkB,MAA1BC,QAA8C,OAC1CpB,SAAaG,eAAYA,WAATkB,UAAwBC,OAAA,WACxC,KAIAC,SAAAA,iBAAuB,mBAAvB,WACAC,IAAQC,EAAQF,SAAhBpB,eAAA,sBAEQF,EAAAA,SAAiByB,cAAS,YAC9BF,EAAAxB,SAAsB2B,cAAtB,UAGJJ,EAAStB,UAAAA,UACLuB,EAAQH,UAAUC,IAAAA,aADtBE,EAAAC,QAAAF,GAKJK,EAAA3B,iBAAA,QAAA,WARQuB,EAAQH,UAAUQ,IAAI,kBAW1BN,EAAavB,iBAEb,QAAA,WATIwB,EAAQH,UAAUC,OAAO,oBAKjCtB,SAASC,iBAAiB,mBAAoB,WAC1C,IAAM6B,EAAe9B,SAASG,eAAe,oBAU7C2B,EAAa7B,SAAAA,KAG4B,YAAjC8B,aAAaC,QAAQ,cAFzBC,EAGOZ,UAAAQ,IAAA,aACHI,EAAeX,SAAO,GAhBlCQ,EAAA7B,iBAAA,SAAA,WAsBAiC,KAAAC,SATYF,EAAKZ,UAAUQ,IAAI,aAUtB5B,aAAT+B,QAA0B,WAA1B,aAEkBC,EAAGjC,UAAS0B,OAAAA,aACjBL,aAAcW,QAAnB,WAAA,iBAOHhC,SAAAC,iBAAA,mBAAA,WAcGmC,WAvBJ,SAASC,IAWT/B,IAAW+B,EAAAA,SAZ0CX,cAYxB,uBAIjCY,EAAAjB,UAAAQ,IAAA,SACQvB,WAACL,WACDsC,EAAWlB,UACfC,OAAA,UAZO,KAcDkB,WAAaH,EAAGI,OAGlB,OAIIzC,SAAAC,iBAAA,mBAAA,WACAyC,IAAAA,EAAOC,EATTF,EAAczC,SAASG,eAAe,yBACtCqC,EAAgBC,EAAYG,aAAa,YAavCL,EAAQtC,iBAAR,QAAA,SAAAmC,GACDA,EAFHS,iBANiB,MAJrBN,IAMQG,OAAOC,SAASG,KAAON,GAI3BlC,WAAW,WACPiC,EAAW,GACZ","file":"script.min.js","sourcesContent":["/*Typewriter*/\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    const textElement = document.getElementById('typing-text');\r\n    if (textElement) {\r\n        const texts = [\r\n            \"Welcome to CBC-EDU Triad ðŸŽ“\",\r\n            \"Discover the power of CBC-driven learning ðŸ“˜\",\r\n            \"Map Competencies. Submit Projects. Get Feedback.\",\r\n            \"Students: Upload your innovation projects with ease!\",\r\n            \"Teachers: Assess with rubrics aligned to CBC standards.\",\r\n            \"Parents: Give feedback and stay engaged in your child's learning.\",\r\n            \"Track growth, showcase skills, and grow together ðŸš€\"\r\n        ];\r\n        \r\n\r\n        let textIndex = 0;\r\n        let charIndex = 0;\r\n        const typingSpeed = 80; // typing speed in milliseconds\r\n        const erasingSpeed = 5; // erasing speed in milliseconds\r\n        const delayBetweenTexts = 2000; // delay between texts in milliseconds\r\n\r\n        function type() {\r\n            if (charIndex < texts[textIndex].length) {\r\n                textElement.textContent += texts[textIndex].charAt(charIndex);\r\n                charIndex++;\r\n                setTimeout(type, typingSpeed);\r\n            } else {\r\n                setTimeout(erase, delayBetweenTexts);\r\n            }\r\n        }\r\n\r\n        function erase() {\r\n            if (charIndex > 0) {\r\n                textElement.textContent = texts[textIndex].substring(0, charIndex - 1);\r\n                charIndex--;\r\n                setTimeout(erase, erasingSpeed);\r\n            } else {\r\n                textIndex = (textIndex + 1) % texts.length;\r\n                setTimeout(type, typingSpeed);\r\n            }\r\n        }\r\n\r\n        setTimeout(type, typingSpeed);\r\n    } else {\r\n        console.error('Element with id \"typing-text\" not found');\r\n    }\r\n});\r\n\r\n\r\n/* START UP LOADER*/\r\n// Wait for 3 seconds (loading effect), then show content\r\nsetTimeout(() => {\r\n    document.getElementById(\"loader\").style.display = \"none\";  // Hide loader\r\n    document.getElementById(\"content\").classList.remove(\"hidden\");  // Show content\r\n}, 400);\r\n\r\n/*SIDEBAR TOGGLING */\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const menuBtn = document.getElementById(\"Hamburger-menu-btn\");\r\n    const sidebar = document.querySelector(\".sidebar\");\r\n    const closeBtn = document.createElement(\"button\");\r\n\r\n    closeBtn.innerHTML = \"&times;\"; \r\n    closeBtn.classList.add(\"close-btn\");\r\n    sidebar.prepend(closeBtn); \r\n\r\n    menuBtn.addEventListener(\"click\", () => {\r\n        sidebar.classList.add(\"show-sidebar\");\r\n    });\r\n\r\n    closeBtn.addEventListener(\"click\", () => {\r\n        sidebar.classList.remove(\"show-sidebar\");\r\n    });\r\n});\r\n\r\n/* DARKMODE*/\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    const toggleSwitch = document.getElementById(\"toggle-dark-mode\");\r\n    const body = document.body;\r\n\r\n    // Check for dark mode preference in localStorage\r\n    if (localStorage.getItem(\"darkMode\") === \"enabled\") {\r\n        body.classList.add(\"dark-mode\");\r\n        toggleSwitch.checked = true;\r\n    }\r\n\r\n    // Toggle dark mode and store preference\r\n    toggleSwitch.addEventListener(\"change\", function () {\r\n        if (this.checked) {\r\n            body.classList.add(\"dark-mode\");\r\n            localStorage.setItem(\"darkMode\", \"enabled\");\r\n        } else {\r\n            body.classList.remove(\"dark-mode\");\r\n            localStorage.setItem(\"darkMode\", \"disabled\");\r\n        }\r\n    });\r\n});\r\n\r\n/*SHAKE THE HUMBURGER */\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n    function shakeMenu() {\r\n        const menu = document.querySelector(\".Hamburger-menu-btn\");\r\n        menu.classList.add(\"shake\");\r\n\r\n        setTimeout(() => {\r\n            menu.classList.remove(\"shake\");\r\n        }, 500); // Remove shake after animation duration (0.5s)\r\n\r\n        setTimeout(shakeMenu, 3500); // Restart shake after 3-second pause\r\n    }\r\n\r\n    setTimeout(shakeMenu, 3000); // Start shaking after initial 3 seconds\r\n});\r\n\r\n\r\n// Admin dashboard link functionality hide the admin form \r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    let tapCount = 0;\r\n    // Get the admin button and its data-url attribute\r\n    const adminButton = document.getElementById(\"hidden_admin_function\");\r\n    const adminLoginUrl = adminButton.getAttribute('data-url'); // Get the URL from the data attribute\r\n    \r\n    adminButton.addEventListener(\"click\", (event) => {\r\n        event.preventDefault(); // Prevent default link behavior\r\n        tapCount++;\r\n\r\n        if (tapCount === 4) {\r\n            // Redirect to the admin login page using the Flask-generated URL\r\n            window.location.href = adminLoginUrl;\r\n        }\r\n\r\n        // Reset the tap count after 2 seconds of inactivity\r\n        setTimeout(() => {\r\n            tapCount = 0;\r\n        }, 2000);\r\n    });\r\n});"]}